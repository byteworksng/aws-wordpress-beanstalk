packages:
  yum:
    mod24_ssl : []

files:
  /tmp/certificate_renew:
    mode: "000644"
    owner: root
    group: root
    content: |
      0 0 * * 0 root /opt/certbot/certbot-auto renew --webroot --webroot-path /var/www/html/ --pre-hook "killall httpd" --post-hook "sudo restart supervisord || sudo start supervisord" --force-renew --preferred-challenges http-01 >> /var/log/certificate_renew.log 2>&1
 
  /etc/httpd/conf.d/ssl_rewrite.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      RewriteEngine On
      RewriteCond %{HTTP:X-Forwarded-Proto} !https [OR]
      RewriteCond %{HTTP_HOST} ^www\. [NC] 
      RewriteRule (.*) https://%{SERVER_NAME}%{REQUEST_URI} [R=301,L,NE]

  /etc/httpd/conf.d/ssl.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      LoadModule ssl_module modules/mod_ssl.so
      Listen 443
      <VirtualHost *:443>
      # You must change this domain to your actual domain
      ServerName yourdomain.com
      ServerAlias www.yourdomain.com
      UseCanonicalName on
      DocumentRoot /var/www/html
        <Proxy *>
          Order deny,allow
          Allow from all
        </Proxy>

        <Directory /var/www/html>
          Options Indexes FollowSymLinks
          AllowOverride All
          Require all granted
        </Directory>  
        

        SSLEngine             on
        SSLCertificateFile    "/etc/pki/tls/certs/ebcert/fullchain.pem"
        SSLCertificateKeyFile "/etc/pki/tls/certs/ebcert/privkey.pem"
        SSLCipherSuite        EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
        SSLProtocol           All -SSLv2 -SSLv3
        SSLHonorCipherOrder   On
        SSLSessionTickets     Off
        
        Header always set Strict-Transport-Security "max-age=63072000; includeSubdomains; preload"
        Header always set X-Frame-Options DENY
        Header always set X-Content-Type-Options nosniff
        
        ProxyPass / http://localhost:80/ retry=0
        ProxyPassReverse / http://localhost:80/
        ProxyPreserveHost on
        RequestHeader set X-Forwarded-Proto "https" early

        # Block .svn, .git
        RewriteRule \.(svn|git)(/)?$ - [F]
        
      </VirtualHost>
      <VirtualHost *:80>
        # You must change this domain to your actual domain
        ServerName yourdomain.com
        ServerAlias www.yourdomain.com
        UseCanonicalName on
      </VirtualHost>
      LogFormat "%h (%{X-Forwarded-For}i) %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined

container_commands:
  # creates a swapfile to avoid memory errors in small instances
  00_enable_swap:
    command: "sudo swapoff /tmp/swapfile_certbot ; sudo rm /tmp/swapfile_certbot ; sudo fallocate -l 1G /tmp/swapfile_certbot && sudo chmod 600 /tmp/swapfile_certbot && sudo mkswap /tmp/swapfile_certbot && sudo swapon /tmp/swapfile_certbot"
  # installs certbot
  10_install_certbot:
    command: "mkdir -p /opt/certbot && wget https://dl.eff.org/certbot-auto -O /opt/certbot/certbot-auto && chmod a+x /opt/certbot/certbot-auto"
  # issue the certificate if it does not exist - remove --staging flag after testing or when ready to deploy to production
  20_install_certificate:
    command: "sudo /opt/certbot/certbot-auto certonly --debug --non-interactive --email ${LETSENCRYPT_EMAIL} --agree-tos --webroot --webroot-path /var/www/html/ --domains ${LETSENCRYPT_DOMAIN},${LETSENCRYPT_SUBDOMAIN} --keep-until-expiring --preferred-challenges http-01 --staging"
  # create a link so we can use '/etc/pki/tls/certs/ebcert/fullchain.pem'
  # in the apache config file
  30_link:
    command: "ln -sf /etc/letsencrypt/live/${LETSENCRYPT_DOMAIN} /etc/pki/tls/certs/ebcert && ln -sf /etc/letsencrypt/live/${LETSENCRYPT_SUBDOMAIN} /etc/pki/tls/certs/ebcert"
  # Rename the default .conf file so it won't be used by Apache.
  40_config:
    command: "mv /etc/httpd/conf.d/wsgi.conf /etc/httpd/conf.d/wsgi.conf.bkp || true"
  # clear the swap files created in 00_enable_swap
  50_cleanup_swap:
    command: "sudo swapoff /tmp/swapfile_certbot && sudo rm /tmp/swapfile_certbot"
  # kill all httpd processes so Apache will use the new configuration
  60_killhttpd:
    command: "killall httpd ; sleep 3"
  # Add renew cron job to renew the certificate
  70_cronjob_certificate_renew:
      command: "mv /tmp/certificate_renew /etc/cron.d/certificate_renew"
